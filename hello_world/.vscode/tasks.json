{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "options": {
        "env": {
            "PYTEST_ADDOPTS": "-vv --tb=native"
        }
    },
    "tasks": [
        {
            "label": "Poetry Lock",
            "type": "shell",
            "command": "poetry",
            "args": [
                "lock",
                "--no-update"
            ],
            "dependsOn": [],
            "runOptions": {
                "runOn": "folderOpen"
            },
            "presentation": {
                "echo": true,
                "reveal": "never",
                "revealProblems": "onProblem",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Poetry Install",
            "type": "shell",
            "command": "poetry",
            "args": [
                "install",
                "--no-interaction",
                "--no-ansi",
                "--directory=./",
                "--with=test"
            ],
            "dependsOn": [
                "Poetry Lock"
            ],
            "runOptions": {
                "runOn": "folderOpen"
            },
            "presentation": {
                "echo": true,
                "reveal": "never",
                "revealProblems": "onProblem",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run pytest",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run",
                "pytest",
                "./src/",
                "./tests/unit/",
                "-s",
                "--cache-clear",
                "-c=../.tools/pytest.ini",
                "--cov=./",
                "--cov-report=xml:./coverage.xml",
                "--cov-config=../.tools/.coveragerc"
            ],
            // preferably we get the config dynamically, but the args is an array that cannot be processed properly
            // "args": [
            //     "${config:python.testing.pytestPath}",
            //     "./",
            //     "${config:python.testing.pytestArgs}",
            "dependsOn": [
                "Poetry Install"
            ],
            "runOptions": {
                "runOn": "folderOpen"
            },
            "presentation": {
                "echo": true,
                "reveal": "never",
                "revealProblems": "onProblem",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        }
    ]
}